{"ast":null,"code":"var _jsxFileName = \"/home/hyfbe14/Desktop/rhw-w3/HYF-React2-Homework/client/src/components/TodoList.jsx\";\nimport React from \"react\";\nimport { AddItem } from \"./AddItem\";\nimport { TodoItem } from \"./TodoItem\";\nexport class TodoList extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      const data = await fetch(\"/api/todos\");\n      const jsonData = await data.json();\n      this.setState({\n        items: jsonData\n      });\n    };\n\n    this.onAddItem = title => {\n      let items = this.state.items;\n      items.push({\n        title,\n        completed: false\n      });\n      this.setState({\n        items\n      });\n    };\n\n    this.handleChecked = async index => {\n      let item = this.state.items[index];\n      item.completed = !item.completed;\n      const response = await fetch(\"/api/todos/\".concat(item.id), {\n        method: \"PUT\",\n        body: JSON.stringify(item),\n        // Coordinate the body type with 'Content-Type'\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      });\n      const items = await response.json();\n      this.setState({\n        items\n      });\n    };\n\n    this.handleDelete = index => {\n      let items = this.state.items;\n      const newItems = [...items.slice(0, index), ...items.slice(index + 1)]; // const newItems2 = this.state.items.filter((item, indexItem) => {             // other way to delete an item from an array\n      //     return indexItem !== index;\n      // });\n\n      this.setState({\n        items: newItems\n      });\n    };\n\n    this.handleEdit = (index, title) => {\n      let items = this.state.items;\n      let item = items[index];\n      item.title = title;\n      items[index] = item;\n      this.setState({\n        items\n      });\n    };\n\n    this.state = {\n      items: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(AddItem, {\n      onAddItem: this.onAddItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.items.map((value, index) => {\n      return React.createElement(TodoItem, {\n        handleChecked: this.handleChecked,\n        handleDelete: this.handleDelete,\n        handleEdit: this.handleEdit,\n        title: value.title,\n        completed: value.completed,\n        id: index,\n        key: index // you can't use it. Just used by map to optimize the rendering\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/hyfbe14/Desktop/rhw-w3/HYF-React2-Homework/client/src/components/TodoList.jsx"],"names":["React","AddItem","TodoItem","TodoList","Component","constructor","componentDidMount","data","fetch","jsonData","json","setState","items","onAddItem","title","state","push","completed","handleChecked","index","item","response","id","method","body","JSON","stringify","headers","Headers","handleDelete","newItems","slice","handleEdit","render","map","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AddItem } from \"./AddItem\";\nimport { TodoItem } from \"./TodoItem\";\n\nexport class TodoList extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            items: []\n        };\n    }\n\n    componentDidMount = async () => {\n        const data = await fetch(\"/api/todos\");\n        const jsonData = await data.json();\n        this.setState({\n            items: jsonData\n        });\n    };\n\n    // Step 1: change the onAddItem function to update the items on the server with a request\n\n    onAddItem = title => {\n        let items = this.state.items;\n        items.push({\n            title,\n            completed: false\n        });\n        this.setState({ items });\n    };\n\n    // FYI: here is a small example about how to handle the update of an item. Take inspiration from it to build the other requests!\n\n    handleChecked = async index => {\n        let item = this.state.items[index];\n        item.completed = !item.completed;\n        const response = await fetch(`/api/todos/${item.id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(item), // Coordinate the body type with 'Content-Type'\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        const items = await response.json();\n        this.setState({\n            items\n        });\n    };\n\n    // Step 3: Do the same as you did on the client and on the server for handling the delete feature\n\n    handleDelete = index => {\n        let items = this.state.items;\n        const newItems = [...items.slice(0, index), ...items.slice(index + 1)];\n        // const newItems2 = this.state.items.filter((item, indexItem) => {             // other way to delete an item from an array\n        //     return indexItem !== index;\n        // });\n        this.setState({\n            items: newItems\n        });\n    };\n\n    // Step 5: update an item by doing the same call as we did for handling the check/uncheck feature. Here you only need to change the client side since the server side is already done ;)\n\n    handleEdit = (index, title) => {\n        let items = this.state.items;\n        let item = items[index];\n        item.title = title;\n        items[index] = item;\n        this.setState({\n            items\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <AddItem onAddItem={this.onAddItem} />\n                <ul>\n                    {this.state.items.map((value, index) => {\n                        return (\n                            <TodoItem\n                                handleChecked={this.handleChecked}\n                                handleDelete={this.handleDelete}\n                                handleEdit={this.handleEdit}\n                                title={value.title}\n                                completed={value.completed}\n                                id={index}\n                                key={index} // you can't use it. Just used by map to optimize the rendering\n                            />\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}